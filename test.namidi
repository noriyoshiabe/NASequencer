/*
 * 予約語はCase insensitive
 *   例) TimeSignature time_signature timesignature TIMESIGNATURE TIME_SIGNATURE 全部オッケー
 */

// コメントはC互換

resolution 480

// 引数省略時のデフォルト値設定
set default velocity=127/2

// nextstepは予約語で次のMidiEventとの長さの差分が自動的に入るイメージ
// = の右側は四則演算可 (出来ないものもあるのでその場合はエラー)
//set default gatetime=nextstep-20
set default gatetime=-20
set default gatetime=+20

tempo 120.5 *1.5

// デフォルト値クリア
unset default velocity
unset default gatetime

// トラック開始
//track name="syntax sample"

track "syntax sample"
  // インデントフリー してもしなくてもオッケー
  time_signature 4/4

  // 引数省略時、default設定があればdefault値 無ければラスト値
  // ※ラスト値はtrack開始時に0クリア
  tempo 120. // この場合step=0

  // ※ stepは前のイベントとの相対時間(分解能はresolutionで指定)

  // ; は一行に複数書く場合のみ
  bank_select channel=9 msb=0 lsb=127;  program_change 0
  bank_select channel=10 msb=0 lsb=0;   program_change 4
  bank_select msb=0 lsb=0;   program_change 4

  // 曲の途中で拍子を変える
  // step=48:0:0 で48小節目の1拍目のつもり
  //time_signature step=49:1:0:0:0:0:0 4/4
  time_signature step=120 step=48:1:0 4/4
  time_signature step=1:0 4/4
  tempo step=0 120.0

  marker 'AA'
track_end

//track name='drums' channel=9
track channel=9 msb=1 lsb=1

  /*
   * 最初はパターンは実装せず、includeでDRYに出来る仕組み
   *  -> 狙いはプログラマじゃない人にもわかりやすくしたいので
   */
  include "./snipets/drums_example.namidi" // 拡張子は.namidi
                                           // いずれはVim用のSyntaxファイルも
track_end

//track name='bass' channel=10
track
  /*note step=0   pitch=C1; note pitch=F#1
  note step=120 pitch=C18*/

  note step=0   C1; note F#1
  note step=120 C#1

  note
  note C1,D1,E1,F1
track_end step=480

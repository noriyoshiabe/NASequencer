#!/usr/bin/env node

var fs = require('fs')
  , execSync = require('child_process').execSync
  , util = require('util')
  , ejs = require('ejs')
  , marked = require('marked');


var locale = 'en';

var srcDir = __dirname + '/../doc';
var dstDir = '../doc/dest/help';


function renderHelp () {

  var renderer = new marked.Renderer();

  // For Help Indexer
  renderer.br = function () {
    return '<br/>';
  }

  var contents = [
    'overview',
    'getting_started',
    'general',
    'preference',
    'nas',
    'abc',
    'mml',
    'support',
    'license',
  ]

  var template = fs.readFileSync(srcDir + '/template/help.ejs', 'utf-8');
  var dest = dstDir + '/en.lproj/index.html';

  var renderAttrs = {};

  for (var i = 0; i < contents.length; ++i) {
    var identifier = contents[i];
    var contentPath = srcDir+'/'+locale+'/'+identifier+'.md';
    if (!fs.existsSync(contentPath)) {
      contentPath = srcDir+'/base/'+identifier+'.md';
    }

    var md = fs.readFileSync(contentPath, 'utf8');

    renderer.heading = function (text, level) {
      if (1 == level) {
        return '';
      }
      level += 2;
      return '<a name="'+identifier+'__'+text+'"></a><h'+level+'>'+text+'</h'+level+'>';
    }

    renderer.link = function (href, title, text) {
      if (href.startsWith('http')) {
        return '<a href="'+href+'" target="_blank">'+text+'</a>';
      }
      else if (href.startsWith('#')) {
        return '<a class="js-transit" href="#'+identifier+'__'+href.substring(1)+'">'+text+'</a>';
      }
      else if (href.match(/.+\.md#.+/)) {
        var matches = href.match(/(.+)\.md#(.+)/);
        return '<a class="js-transit" href="#'+matches[1]+'__'+matches[2]+'">'+text+'</a>';
      }
      else if (href.match(/.+\.md/)) {
        var matches = href.match(/(.+)\.md/);
        return '<a class="js-transit" href="#'+matches[1]+'">'+text+'</a>';
      }
    }

    renderAttrs[identifier] = marked(md, {renderer: renderer});
  }

  var html = ejs.render(template, renderAttrs);
  fs.writeFileSync(dest, html);
}


function main(argv, callback) {
  execSync('rm -rf '+dstDir);

  execSync('mkdir -p '+dstDir);
  execSync('mkdir '+dstDir+'/shared');
  execSync('mkdir '+dstDir+'/en.lproj');

  execSync('cp '+srcDir+'/shared/*.png '+dstDir+'/shared/');
  execSync('cp '+srcDir+'/asset/help.js '+dstDir+'/shared/');
  execSync('cp '+srcDir+'/asset/help.css '+dstDir+'/shared/');

  renderHelp();
}

if (!module.parent) {
  main(process.argv.slice(), function(err, code) {
    if (err) throw err;
    return process.exit(code || 0);
  });
} else {
  module.exports = main;
}

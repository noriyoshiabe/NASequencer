drums = {
  channel 10
  octave 1

  8beat = {
    ptn = {
      { 1/8 first_cymbal F+ * 7 }, // 'first_symbal' is lazy evaluation
      { 1/4 C E 1/8 C C E ~ } // time-sign for step can be set everywhere
    }

    // # -> +   b -> -
    C+ B- C+ B- b-

    octave -1
    C+

    key C+

    b_cdefgabc^

    first_cymbal = { 1/8 C#2 }
    ptn * 1
    first_cymbal = { 1/8 F#2 }
    ptn * 2 // repeat expanding 2 times

    fill // lazy evaluation
  }

  fill = {
    1/8 E * 7 1/16 E * 2

    8beat // circular reference should be error
  }

  8beat * 3
  8beat length 3 * 2
}


test = {
  C * 8
  { 1/4 C,E,G 1/8 ~ ^ C D E F } * 3
  ptn 
  1/4 C,E,G 1/8 ~ ^ C D E F
  1/4 C,E,G 1/8 ~ ^ C D E F
  1/4 C,E,G 1/8 ~ ^ C D 1/4 E
},
{
  1/1 C D E F
}

// TBD
//script {
//  console.log(context.tick)
//  console.log(context.step)
//  context.addNote(0, 10, 64, 127, 480)
//}

test2 = {
  test length 3 // 3 measure
  test offset 1 length 1/2
  
  // obsulute m:b:tick expression

  // offset 1 -> start from 2:1:0
  // offset 1 + 1/4 -> start from 2:2:0
  // length 3 -> 3 measures
  // length 2 + 3/4 -> 2 measures and 3 beats


  // obsolute mix and replace
  // mix is satisfied by camma with pattern and block
  // replace is satisfied by offset and length
}

// set absolute position with 'location'
location 1 drums
location 2 bass
location 5 + 3/4 piano

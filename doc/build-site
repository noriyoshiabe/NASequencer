#!/usr/bin/env node

var fs = require('fs');
var execSync = require('child_process').execSync;
var ejs = require('ejs');
var renderer = require('./lib/site_md_renderer');
var marked = require('marked');
var beautify = require('js-beautify').html;

var env = 2 < process.argv.length && 'production' ==  process.argv[2] ? 'production' : 'staging';
var dstDir = __dirname+'/dest/site/'+env;

function renderPage (name, options) {
  function lastPathComponent(path) {
    var arr = path.split('/');
    return arr[arr.length - 1];
  }

  options = options || {};
  options.template = options.template || 'md-content';
  options.renderer = options.renderer || renderer.normal;
  options.content = options.content || lastPathComponent(name);

  var template = __dirname+'/site/pages/'+options.template+'.ejs';
  var values = JSON.parse(fs.readFileSync(__dirname+'/site/values/'+name+'.json'));

  values.site_url = 'production' == env ? 'https://nasequencer.com' : 'http://staging.nasequencer.com';

  if ('none' != options.content) {
    var md = fs.readFileSync(__dirname + '/md/'+options.content+'.md', 'utf8');
    values.content = marked(md, {renderer: options.renderer(marked)});
  }
  
  ejs.renderFile(template, values, function(err, result) {
    if (!err) {
      fs.writeFileSync(dstDir+'/'+name+'.html', beautify(result, {indent_size: 2}));
    }
    else {
      console.log(err);
    }
  });
}

function main(argv, callback) {
  execSync('rm -rf '+dstDir);
  execSync('mkdir -p '+dstDir);
  execSync('mkdir -p '+dstDir+'/images');
  execSync('mkdir -p '+dstDir+'/help');

  renderPage('index', {content: 'none', template: 'index'});
  renderPage('third-party-licenses');
  renderPage('privacy-policy');
  renderPage('specified-commercial-transaction-law');
  renderPage('support');

  renderPage('help/index',                {renderer: renderer.help, content: 'site-help-index'});
  renderPage('help/getting-started',      {renderer: renderer.help});
  renderPage('help/operation-manual',     {renderer: renderer.help});
  renderPage('help/preference',           {renderer: renderer.help});
  renderPage('help/syntax-reference',     {renderer: renderer.help});
  renderPage('help/note-as-sequence',     {renderer: renderer.help});
  renderPage('help/abc-notation',         {renderer: renderer.help});
  renderPage('help/music-macro-language', {renderer: renderer.help});

  execSync('cp '+__dirname+'/site/asset/*.{png,svg,ico,css,js,json} '+dstDir);
  execSync('cp '+__dirname+'/images/*.png '+dstDir+'/images');
  execSync('cp '+__dirname+'/site/images/*.png '+dstDir+'/images');

  var num = 'production' == env ? 1 : 2;
  execSync("sed -i '' -E 's/(UA-77464123)-X/\\1-"+num+"/' "+dstDir+"/google-analytics.js")

  if ('staging' == env) {
    execSync('echo "User-agent: *\nDisallow: /\n" > '+dstDir+'/robots.txt');
  }
}

if (!module.parent) {
  main(process.argv.slice(), function(err, code) {
    if (err) throw err;
    return process.exit(code || 0);
  });
} else {
  module.exports = main;
}

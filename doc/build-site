#!/usr/bin/env node

var fs = require('fs');
var execSync = require('child_process').execSync;
var ejs = require('ejs');
var renderer = require('./lib/site_md_renderer');
var marked = require('marked');
var beautify = require('js-beautify').html;

var dstDir = __dirname+'/dest/site';

function renderPage (name, mds, _renderer) {
  _renderer = _renderer || renderer.normal
  mds = mds || []

  var template = __dirname+'/site/pages/'+name+'.ejs';
  var values = JSON.parse(fs.readFileSync(__dirname+'/site/values/'+name+'.json'));

  for (var i = 0; i < mds.length; ++i) {
    var identifier = mds[i];
    var md = fs.readFileSync(__dirname + '/md/'+identifier+'.md', 'utf8');
    values[identifier] = marked(md, {renderer: _renderer(marked)});
  }
  
  ejs.renderFile(template, values, function(err, result) {
    if (!err) {
      fs.writeFileSync(dstDir+'/'+name+'.html', beautify(result, {indent_size: 2}));
    }
    else {
      console.log(err);
    }
  });
}

function main(argv, callback) {
  execSync('rm -rf '+dstDir);
  execSync('mkdir -p '+dstDir);
  execSync('mkdir -p '+dstDir+'/images');
  execSync('mkdir -p '+dstDir+'/help');

  renderPage('index');
  renderPage('third-party-licenses', ['license']);
  renderPage('privacy-policy', ['privacy_policy']);
  renderPage('specified-commercial-transaction-law', ['specified_commercial_transaction_law']);
  renderPage('support', ['support']);

  renderPage('help/index', ['site_help_index'], renderer.help);
  renderPage('help/getting-started', ['getting_started'], renderer.help);
  renderPage('help/operation-manual-general', ['general'], renderer.help);

  execSync('cp '+__dirname+'/site/asset/*.{png,svg,ico,css} '+dstDir);
  execSync('cp '+__dirname+'/images/*.png '+dstDir+'/images');
}

if (!module.parent) {
  main(process.argv.slice(), function(err, code) {
    if (err) throw err;
    return process.exit(code || 0);
  });
} else {
  module.exports = main;
}

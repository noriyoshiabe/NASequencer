#!/usr/bin/env node

var fs = require('fs');
var execSync = require('child_process').execSync;
var ejs = require('ejs');
var renderer = require('./lib/help_renderer');
var marked = require('marked');
var beautify = require('js-beautify').html;

var dstDir = __dirname+'/dest/help/Contents';

function renderPage (name, options) {
  function lastPathComponent(path) {
    var arr = path.split('/');
    return arr[arr.length - 1];
  }

  options = options || {};
  options.template = options.template || 'md-content';
  options.content = options.content || lastPathComponent(name);

  var template = __dirname+'/help/pages/'+options.template+'.ejs';
  var values = JSON.parse(fs.readFileSync(__dirname+'/help/values/'+name+'.json'));

  values.anchor = name == 'index' ? 'top' : name;

  var md = fs.readFileSync(__dirname + '/md/app-help-index.md', 'utf8');
  values.index = marked(md, {renderer: renderer(marked)});

  if ('none' != options.content) {
    var md = fs.readFileSync(__dirname + '/md/'+options.content+'.md', 'utf8');
    values.content = marked(md, {renderer: renderer(marked)});
  }
  
  ejs.renderFile(template, values, function(err, result) {
    if (!err) {
      fs.writeFileSync(dstDir+'/Resources/en.lproj/'+name+'.html', beautify(result, {indent_size: 2}));
    }
    else {
      console.log(err);
    }
  });
}

function main(argv, callback) {
  execSync('rm -rf '+dstDir);

  execSync('mkdir -p '+dstDir);
  execSync('mkdir -p '+dstDir+'/Resources/images');
  execSync('mkdir -p '+dstDir+'/Resources/en.lproj');

  execSync('cp '+__dirname+'/images/*.png '+dstDir+'/Resources/images');
  execSync('cp '+__dirname+'/help/asset/help.js '+dstDir+'/Resources/en.lproj');
  execSync('cp '+__dirname+'/help/asset/help.css '+dstDir+'/Resources/en.lproj');
  execSync('cp '+__dirname+'/help/asset/Info.plist '+dstDir);

  renderPage('index', {content: 'none', template: 'index'});
  renderPage('overview');
  renderPage('getting-started');
  renderPage('operation-manual');
  renderPage('preference');
  renderPage('syntax-reference');
  renderPage('note-as-sequence');
  renderPage('abc-notation');
  renderPage('music-macro-language');
  renderPage('support');
  renderPage('third-party-licenses');
}

if (!module.parent) {
  main(process.argv.slice(), function(err, code) {
    if (err) throw err;
    return process.exit(code || 0);
  });
} else {
  module.exports = main;
}

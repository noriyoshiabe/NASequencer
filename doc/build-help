#!/usr/bin/env node

var fs = require('fs');
var execSync = require('child_process').execSync;
var ejs = require('ejs');
var renderer = require('./lib/help_renderer');
var marked = require('marked');

var dstDir = __dirname+'/dest/help/Contents';

function renderHelp () {
  var template = fs.readFileSync(__dirname+'/help/index.ejs', 'utf-8');

  var contents = [
    'index',
    'overview',
    'getting_started',
    'general',
    'preference',
    'nas',
    'abc',
    'mml',
    'support',
    'license',
  ]

  var renderAttrs = {};

  for (var i = 0; i < contents.length; ++i) {
    var identifier = contents[i];
    var contentPath = __dirname + '/md/'+identifier+'.md';
    var md = fs.readFileSync(contentPath, 'utf8');

    renderAttrs[identifier] = marked(md, {renderer: renderer(marked, identifier)});
  }

  var html = ejs.render(template, renderAttrs);
  fs.writeFileSync(dstDir+'/Resources/en.lproj/index.html', html);
}


function main(argv, callback) {
  execSync('rm -rf '+dstDir);

  execSync('mkdir -p '+dstDir);
  execSync('mkdir -p '+dstDir+'/Resources/images');
  execSync('mkdir -p '+dstDir+'/Resources/en.lproj');

  execSync('cp '+__dirname+'/images/*.png '+dstDir+'/Resources/images');
  execSync('cp '+__dirname+'/help/help.js '+dstDir+'/Resources/en.lproj');
  execSync('cp '+__dirname+'/help/help.css '+dstDir+'/Resources/en.lproj');
  execSync('cp '+__dirname+'/help/Info.plist '+dstDir);

  var html = renderHelp();
}

if (!module.parent) {
  main(process.argv.slice(), function(err, code) {
    if (err) throw err;
    return process.exit(code || 0);
  });
} else {
  module.exports = main;
}
